name: Gonzo's Assessment CI/CD Pipeline
on:
  push:
    branches: [ main ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/assessment:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/assessment:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build

    steps:
      # Kubectl and Helm install
      - name: Kubectl and Helm install
        shell: bash
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
          KUBE_VERSION: v1.28.4
          HELM_VERSION: v3.12.2
        run: |
          curl -Ls https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/amd64/kubectl -o kubectl && chmod +x kubectl && mv kubectl /usr/local/bin/kubectl
          curl -Ls https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz -o helm-linux-amd64.tar.gz && tar -xzf helm-linux-amd64.tar.gz && mv linux-amd64/helm /usr/local/bin/helm
          echo ${KUBECONFIG} | base64 --decode > kubeconfig.yaml
          chmod 600 kubeconfig.yaml
          echo ${GITHUB_WORKSPACE}
          echo "KUBECONFIG=${GITHUB_WORKSPACE}/kubeconfig.yaml" >> $GITHUB_ENV

      # Ddeployment
      - name: Deployment
        working-directory: ./deploy
        shell: bash
        env:
          KUBECONFIG: ${{ env.KUBECONFIG }}
        run: |
          echo "Here we would do the deployment steps with kubectl or helm"
          #kubectl apply -f assessment.yaml
